// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: grpc-echo-server.proto

package rpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Format_Greeting int32

const (
	Format_Unknown Format_Greeting = 0
	Format_Formal  Format_Greeting = 1
	Format_Normal  Format_Greeting = 2
	Format_Casual  Format_Greeting = 3
)

// Enum value maps for Format_Greeting.
var (
	Format_Greeting_name = map[int32]string{
		0: "Unknown",
		1: "Formal",
		2: "Normal",
		3: "Casual",
	}
	Format_Greeting_value = map[string]int32{
		"Unknown": 0,
		"Formal":  1,
		"Normal":  2,
		"Casual":  3,
	}
)

func (x Format_Greeting) Enum() *Format_Greeting {
	p := new(Format_Greeting)
	*p = x
	return p
}

func (x Format_Greeting) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Format_Greeting) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_echo_server_proto_enumTypes[0].Descriptor()
}

func (Format_Greeting) Type() protoreflect.EnumType {
	return &file_grpc_echo_server_proto_enumTypes[0]
}

func (x Format_Greeting) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Format_Greeting.Descriptor instead.
func (Format_Greeting) EnumDescriptor() ([]byte, []int) {
	return file_grpc_echo_server_proto_rawDescGZIP(), []int{2, 0}
}

type ClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ClientRequest) Reset() {
	*x = ClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_echo_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientRequest) ProtoMessage() {}

func (x *ClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_echo_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientRequest.ProtoReflect.Descriptor instead.
func (*ClientRequest) Descriptor() ([]byte, []int) {
	return file_grpc_echo_server_proto_rawDescGZIP(), []int{0}
}

func (x *ClientRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Message    string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *ServerResponse) Reset() {
	*x = ServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_echo_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerResponse) ProtoMessage() {}

func (x *ServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_echo_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerResponse.ProtoReflect.Descriptor instead.
func (*ServerResponse) Descriptor() ([]byte, []int) {
	return file_grpc_echo_server_proto_rawDescGZIP(), []int{1}
}

func (x *ServerResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServerResponse) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

type Format struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Echo string `protobuf:"bytes,1,opt,name=echo,proto3" json:"echo,omitempty"`
}

func (x *Format) Reset() {
	*x = Format{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_echo_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Format) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Format) ProtoMessage() {}

func (x *Format) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_echo_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Format.ProtoReflect.Descriptor instead.
func (*Format) Descriptor() ([]byte, []int) {
	return file_grpc_echo_server_proto_rawDescGZIP(), []int{2}
}

func (x *Format) GetEcho() string {
	if x != nil {
		return x.Echo
	}
	return ""
}

type GreatingClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientGreeting Format_Greeting `protobuf:"varint,1,opt,name=client_greeting,json=clientGreeting,proto3,enum=rpc.Format_Greeting" json:"client_greeting,omitempty"`
}

func (x *GreatingClientRequest) Reset() {
	*x = GreatingClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_echo_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GreatingClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GreatingClientRequest) ProtoMessage() {}

func (x *GreatingClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_echo_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GreatingClientRequest.ProtoReflect.Descriptor instead.
func (*GreatingClientRequest) Descriptor() ([]byte, []int) {
	return file_grpc_echo_server_proto_rawDescGZIP(), []int{3}
}

func (x *GreatingClientRequest) GetClientGreeting() Format_Greeting {
	if x != nil {
		return x.ClientGreeting
	}
	return Format_Unknown
}

type ServerGreatingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Format     *Format                `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *ServerGreatingResponse) Reset() {
	*x = ServerGreatingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_echo_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerGreatingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerGreatingResponse) ProtoMessage() {}

func (x *ServerGreatingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_echo_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerGreatingResponse.ProtoReflect.Descriptor instead.
func (*ServerGreatingResponse) Descriptor() ([]byte, []int) {
	return file_grpc_echo_server_proto_rawDescGZIP(), []int{4}
}

func (x *ServerGreatingResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServerGreatingResponse) GetFormat() *Format {
	if x != nil {
		return x.Format
	}
	return nil
}

func (x *ServerGreatingResponse) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

var File_grpc_echo_server_proto protoreflect.FileDescriptor

var file_grpc_echo_server_proto_rawDesc = []byte{
	0x0a, 0x16, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x65, 0x63, 0x68, 0x6f, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72, 0x70, 0x63, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x29,
	0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7b, 0x0a, 0x0e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x59, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x65, 0x63, 0x68, 0x6f, 0x22, 0x3b, 0x0a, 0x08, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x61, 0x73, 0x75, 0x61, 0x6c, 0x10,
	0x03, 0x22, 0x56, 0x0a, 0x15, 0x47, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x2e, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x8e, 0x01, 0x0a, 0x16, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x3b, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x32, 0x3a, 0x0a, 0x04, 0x45, 0x63,
	0x68, 0x6f, 0x12, 0x32, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x4e, 0x0a, 0x08, 0x47, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x42, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x3b, 0x72, 0x70, 0x63,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_echo_server_proto_rawDescOnce sync.Once
	file_grpc_echo_server_proto_rawDescData = file_grpc_echo_server_proto_rawDesc
)

func file_grpc_echo_server_proto_rawDescGZIP() []byte {
	file_grpc_echo_server_proto_rawDescOnce.Do(func() {
		file_grpc_echo_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_echo_server_proto_rawDescData)
	})
	return file_grpc_echo_server_proto_rawDescData
}

var file_grpc_echo_server_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_grpc_echo_server_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_grpc_echo_server_proto_goTypes = []interface{}{
	(Format_Greeting)(0),           // 0: rpc.Format.Greeting
	(*ClientRequest)(nil),          // 1: rpc.ClientRequest
	(*ServerResponse)(nil),         // 2: rpc.ServerResponse
	(*Format)(nil),                 // 3: rpc.Format
	(*GreatingClientRequest)(nil),  // 4: rpc.GreatingClientRequest
	(*ServerGreatingResponse)(nil), // 5: rpc.ServerGreatingResponse
	(*timestamppb.Timestamp)(nil),  // 6: google.protobuf.Timestamp
}
var file_grpc_echo_server_proto_depIdxs = []int32{
	6, // 0: rpc.ServerResponse.create_time:type_name -> google.protobuf.Timestamp
	0, // 1: rpc.GreatingClientRequest.client_greeting:type_name -> rpc.Format.Greeting
	3, // 2: rpc.ServerGreatingResponse.format:type_name -> rpc.Format
	6, // 3: rpc.ServerGreatingResponse.create_time:type_name -> google.protobuf.Timestamp
	1, // 4: rpc.Echo.Reply:input_type -> rpc.ClientRequest
	4, // 5: rpc.Greating.Reply:input_type -> rpc.GreatingClientRequest
	2, // 6: rpc.Echo.Reply:output_type -> rpc.ServerResponse
	5, // 7: rpc.Greating.Reply:output_type -> rpc.ServerGreatingResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_grpc_echo_server_proto_init() }
func file_grpc_echo_server_proto_init() {
	if File_grpc_echo_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_echo_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_echo_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_echo_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Format); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_echo_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GreatingClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_echo_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerGreatingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_echo_server_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_grpc_echo_server_proto_goTypes,
		DependencyIndexes: file_grpc_echo_server_proto_depIdxs,
		EnumInfos:         file_grpc_echo_server_proto_enumTypes,
		MessageInfos:      file_grpc_echo_server_proto_msgTypes,
	}.Build()
	File_grpc_echo_server_proto = out.File
	file_grpc_echo_server_proto_rawDesc = nil
	file_grpc_echo_server_proto_goTypes = nil
	file_grpc_echo_server_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EchoClient is the client API for Echo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EchoClient interface {
	Reply(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*ServerResponse, error)
}

type echoClient struct {
	cc grpc.ClientConnInterface
}

func NewEchoClient(cc grpc.ClientConnInterface) EchoClient {
	return &echoClient{cc}
}

func (c *echoClient) Reply(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*ServerResponse, error) {
	out := new(ServerResponse)
	err := c.cc.Invoke(ctx, "/rpc.Echo/Reply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EchoServer is the server API for Echo service.
type EchoServer interface {
	Reply(context.Context, *ClientRequest) (*ServerResponse, error)
}

// UnimplementedEchoServer can be embedded to have forward compatible implementations.
type UnimplementedEchoServer struct {
}

func (*UnimplementedEchoServer) Reply(context.Context, *ClientRequest) (*ServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Reply not implemented")
}

func RegisterEchoServer(s *grpc.Server, srv EchoServer) {
	s.RegisterService(&_Echo_serviceDesc, srv)
}

func _Echo_Reply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EchoServer).Reply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Echo/Reply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EchoServer).Reply(ctx, req.(*ClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Echo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Echo",
	HandlerType: (*EchoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Reply",
			Handler:    _Echo_Reply_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc-echo-server.proto",
}

// GreatingClient is the client API for Greating service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreatingClient interface {
	Reply(ctx context.Context, in *GreatingClientRequest, opts ...grpc.CallOption) (*ServerGreatingResponse, error)
}

type greatingClient struct {
	cc grpc.ClientConnInterface
}

func NewGreatingClient(cc grpc.ClientConnInterface) GreatingClient {
	return &greatingClient{cc}
}

func (c *greatingClient) Reply(ctx context.Context, in *GreatingClientRequest, opts ...grpc.CallOption) (*ServerGreatingResponse, error) {
	out := new(ServerGreatingResponse)
	err := c.cc.Invoke(ctx, "/rpc.Greating/Reply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreatingServer is the server API for Greating service.
type GreatingServer interface {
	Reply(context.Context, *GreatingClientRequest) (*ServerGreatingResponse, error)
}

// UnimplementedGreatingServer can be embedded to have forward compatible implementations.
type UnimplementedGreatingServer struct {
}

func (*UnimplementedGreatingServer) Reply(context.Context, *GreatingClientRequest) (*ServerGreatingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Reply not implemented")
}

func RegisterGreatingServer(s *grpc.Server, srv GreatingServer) {
	s.RegisterService(&_Greating_serviceDesc, srv)
}

func _Greating_Reply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GreatingClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreatingServer).Reply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Greating/Reply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreatingServer).Reply(ctx, req.(*GreatingClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greating_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Greating",
	HandlerType: (*GreatingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Reply",
			Handler:    _Greating_Reply_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc-echo-server.proto",
}
